# Generated by Django 5.2.6 on 2025-10-28 14:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=150)),
                ('number', models.CharField(max_length=20)),
                ('complement', models.CharField(blank=True, max_length=100, null=True)),
                ('neighborhood', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('cep', models.CharField(max_length=10)),
                ('country', models.CharField(default='Brasil', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pend', 'Pending'), ('Sche', 'Scheduled'), ('Ship', 'Shipped'), ('Deli', 'Delivered'), ('Canc', 'Cancelled')], max_length=4)),
                ('total_weight_kg', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('total_volume_m3', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('total_boxes', models.IntegerField(verbose_name=django.core.validators.MinValueValidator(1))),
                ('scheduled', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('role', models.CharField(choices=[('Man', 'Manager'), ('Shop', 'Shopkeeper'), ('Carr', 'Carrier'), ('Adm', 'Administrator')], max_length=4)),
                ('name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField(verbose_name=django.core.validators.MaxValueValidator(120))),
                ('email', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Gives to user access to admin field.')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if user is active or no.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=254)),
                ('registration', models.CharField(max_length=128)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Depot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=254)),
                ('registration', models.CharField(max_length=128)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('Sma', 'Small'), ('Med', 'Medium'), ('Big', 'Big'), ('Lar', 'Large'), ('Cus', 'Custom')], max_length=3)),
                ('length', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('width', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('height', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('payload_kg', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('volume_m3', models.FloatField(blank=True, null=True)),
                ('was_delivered', models.BooleanField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.order')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=254)),
                ('registration', models.CharField(max_length=128)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.store'),
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateTimeField()),
                ('departure_date', models.DateTimeField()),
                ('arrival_date', models.DateTimeField()),
                ('total_loaded_weight_kg', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('total_loaded_volume_m3', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('excess_weight_flag', models.BooleanField(default=False)),
                ('excess_weight_fine_amount', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('carbon_kg_co2', models.FloatField()),
                ('status', models.CharField(choices=[('Plan', 'Planned'), ('InTr', 'In_Transit'), ('Comp', 'Completed'), ('Canc', 'Cancelled')], max_length=4)),
                ('origin_depot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.depot')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.trip'),
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered_at', models.DateTimeField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.order')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.store')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.trip')),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate', models.CharField(max_length=7, unique=True)),
                ('axles_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(11)])),
                ('cargo_length', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('cargo_width', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('cargo_height', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('max_payload_kg', models.FloatField(verbose_name=django.core.validators.MinValueValidator(0.01))),
                ('cargo_volume_m3', models.FloatField(blank=True, null=True)),
                ('euro', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('is_active', models.BooleanField()),
                ('release_year', models.PositiveIntegerField()),
                ('total_trips', models.PositiveIntegerField()),
                ('max_fuel_capacity', models.PositiveIntegerField()),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.carrier')),
            ],
        ),
        migrations.AddField(
            model_name='trip',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.truck'),
        ),
    ]
